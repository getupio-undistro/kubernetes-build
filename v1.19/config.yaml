projects:
  - name: kubernetes
    repo: https://github.com/kubernetes/kubernetes.git
    version: v1.19.12
    env:
      - name: VERSION_PRERELEASE
        value: "undistro"
      - name: KUBE_DOCKER_REGISTRY
        value: "registry.undistro.io/library"
      - name: REGISTRY
        value: "registry.undistro.io/library"
      - name: KUBE_RELEASE_RUN_TESTS
        value: "n"
    releaseCommand:
      name: make
      args: ["release"]
    afterReleaseCommand:
      name: bash
      args:
        - "-c"
        - >
          cd build/pause;
          make all-push;
          cd ../..;
    packageImagesCommand:
      name: bash
      args:
        - "-c"
        - >
          cd _output/release-images;
          for ARCH_FOLDER in */ ; do
            ARCH=$(echo ${ARCH_FOLDER} | sed 's:/*$::');
            echo "Arch: ${ARCH}";
            cd ${ARCH};
            ls;
            for IMAGE in *.tar ; do
              echo "Image: ${IMAGE}";
              docker load < ${IMAGE};
              IMG=$(ls -1 ${IMAGE} | sed -e 's/\.tar$//');
              docker push "registry.undistro.io/library/${IMG}-${ARCH}:v1.19.12";
              if [ "${ARCH}" = "amd64" ]; then
                docker image tag "registry.undistro.io/library/${IMG}-${ARCH}:v1.19.12" "registry.undistro.io/library/${IMG}:v1.19.12";
                docker push "registry.undistro.io/library/${IMG}:v1.19.12";
              fi;
            done;
            cd ..;
          done;
          cd ../..;
  - name: coredns
    repo: https://github.com/coredns/coredns.git
    version: v1.8.4
    releaseCommand:
      name: make
      args:
        [
          "DOCKER=registry.undistro.io/library",
          "-f",
          "Makefile.release",
          "release",
        ]
    packageImagesCommand:
      name: make
      args:
        [
          "DOCKER=registry.undistro.io/library",
          "-f",
          "Makefile.release",
          "docker-build",
          "docker-push",
        ]
  - name: etcd
    repo: https://github.com/etcd-io/etcd.git
    version: v3.5.0
    env:
      - name: TAG
        value: "registry.undistro.io/library/etcd"
      - name: VERSION
        value: v3.5.0
    releaseCommand:
      name: bash
      args: [
          "-c",
          'for TARGET_ARCH in "amd64" "arm64" "ppc64le" "s390x"; do
          GOOS=linux GOARCH=${TARGET_ARCH} ./scripts/build-docker v3.5.0;
          done',
        ]
    afterReleaseCommand:
      name: docker
      args:
        [
          "image",
          "tag",
          "registry.undistro.io/library/etcd:v3.5.0-amd64",
          "registry.undistro.io/library/etcd:v3.5.0",
        ]
    packageImagesCommand:
      name: bash
      args: [
          "-c",
          'for TARGET_ARCH in "-amd64" "-arm64" "-ppc64le" "-s390x" ""; do
          docker push registry.undistro.io/library/etcd:v3.5.0${TARGET_ARCH};
          done',
        ]
